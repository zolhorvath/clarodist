<?php

/**
 * @file
 * Install and update hooks for Claro Distribution project.
 */

use Drupal\user\Entity\User;
use Drupal\user\RoleInterface;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function clarodist_install() {
  $config_factory = \Drupal::service('config.factory');

  // Allow visitor account creation only by administrators.
  $config_factory->getEditable('user.settings')
    ->set('register', USER_REGISTER_ADMINISTRATORS_ONLY)
    ->save();

  // Assign user 1 the "administrator" role.
  $user = User::load(1);
  $user->roles[] = 'administrator';
  $user->save();

  // We install some menu links, so we have to rebuild the router, to ensure the
  // menu links are valid.
  \Drupal::service('router.builder')->rebuildIfNeeded();

  user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, [
    'use text format basic_html',
    'access site-wide contact form',
  ]);
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, [
    'use text format basic_html',
    'access site-wide contact form',
  ]);

  // Set up default and admin theme.
  // If Claro is available, user that, if not, use Seven.
  $theme = 'seven';
  $themes_available = \Drupal::service('theme_handler')->rebuildThemeData();

  if (
    !empty($themes_available['claro']) &&
    \Drupal::service('theme_installer')->install(['claro'])
  ) {
    $theme = 'claro';
  }

  $config_factory->getEditable('system.theme')
    ->set('admin', $theme)
    ->set('default', $theme)
    ->save();
}

/**
 * Implements hook_install_tasks().
 */
function clarodist_install_tasks(&$install_state) {
  return ['clarodist_optional_module_install' => []];
}

/**
 * Enables cd_core and cd_tools modules if they are available.
 *
 * Since at this state Clarodist will be installed, the modules_installed hook
 * implemented in the profile will update block visibility conditions.
 */
function clarodist_optional_module_install() {
  $modules = \Drupal::service('extension.list.module')->reset()->getList();
  $module_handler = \Drupal::moduleHandler();
  $modules_to_install = [];

  // Cd tools module.
  if (
    in_array('cd_tools', array_keys($modules))
    && !$module_handler->moduleExists('cd_tools')
  ) {
    $modules_to_install[] = 'cd_tools';

    if (
      in_array('lang_hebrew', array_keys($modules))
      && !$module_handler->moduleExists('lang_hebrew')
    ) {
      $modules_to_install[] = 'lang_hebrew';
    }
  }

  // Cd core module.
  if (
    in_array('cd_core', array_keys($modules))
    && !$module_handler->moduleExists('cd_core')
  ) {
    $modules_to_install[] = 'cd_core';
  }

  if (!empty($modules_to_install)) {
    \Drupal::service('module_installer')->install($modules_to_install);
  }
}
